{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Classifier_Trials_V2","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMiC+HA8Nf6N1ybM8qIzukG"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"m98AWVgLjWXI","colab_type":"code","colab":{}},"source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"doSWnEoLrA0O","colab_type":"code","colab":{}},"source":["#Include Function for Stopword Removal\n","from nltk.corpus import stopwords\n","import nltk\n","nltk.download(\"stopwords\")\n","l_sw=stopwords.words(\"english\")\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"e60Vln0IsNYK","colab_type":"code","colab":{}},"source":["def stopw(s):\n","  temp=''\n","  s=s.split()\n","  for i in s:\n","    if i.lower() not in l_sw:\n","      temp+=(i+\" \")\n","  \n","  return temp[:-1]\n","\n","def serial(s):\n","  temp=''\n","  for i in s:\n","    temp+=(i+\" \")\n","  \n","  return temp[:-1]\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"U5S2mGl_4zSw","colab_type":"code","colab":{}},"source":["from pickle import load,dump\n","f=open(\"/content/gdrive/My Drive/Colab Notebooks/Updated_Dataset_CSA/Dataset_V2_Labelled_Corrected.pickle\",\"rb\")\n","\n","l=load(f)\n","len(l)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"b78j7Rz-YDgw","colab_type":"code","colab":{}},"source":["for i in l:\n","  print(i)\n","  break\n","\n","l[243566991414284288]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"g4F0HPKohXeW","colab_type":"code","colab":{}},"source":["#If it needs raw training\n","\n","l_x,l_y=[],[]\n","\n","for i in l:\n","  l_x.append(stopw(l[i][\"tweet_text\"]))\n","  l_y.append(l[i][\"label\"])\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"HymrFHZSngTS","colab_type":"code","colab":{}},"source":["# If train set needs to contain stems\n","\"\"\"\n","for i in l:\n","  l_x.append(serial(l[i][\"snow\"]))\n","  l_y.append(l[i][\"label\"])\n","\"\"\""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"3ySa5L7ahsAa","colab_type":"code","colab":{}},"source":["len(l_x)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"suRCbPvkY2Qe","colab_type":"code","colab":{}},"source":["from random import shuffle\n","from sklearn.model_selection import train_test_split\n","import pandas as pd\n","\n","\n","#train_set=l[:int(0.6*len(l))]\n","#test_set=l[int(0.6*len(l)):]\n","\n","x_train,x_test,y_train,y_test=train_test_split(l_x,l_y,train_size=0.75,stratify=l_y)\n","\n","\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"I2q-YNYPZfej","colab_type":"code","colab":{}},"source":["len(x_test)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"rxPRpettbBea","colab_type":"code","colab":{}},"source":["print(x_train[0])\n","print(y_train[0])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"J8IIP_wUbBRW","colab_type":"code","colab":{}},"source":["direct=\"Custom_V5/V1_1\""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"nlUaxn2baIIx","colab_type":"code","colab":{}},"source":["from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer\n","from joblib import dump, load # used for saving and loading sklearn objects\n","from scipy.sparse import save_npz, load_npz # used for saving and loading sparse matrices\n","\n","#Unigram - Count\n","\n","unigram_vectorizer = CountVectorizer(ngram_range=(1, 1))\n","unigram_vectorizer.fit(x_train)\n","\n","dump(unigram_vectorizer, '/content/gdrive/My Drive/Colab Notebooks/'+direct+'/unigram_vectorizer.joblib')\n","X_train_unigram = unigram_vectorizer.transform(x_train)\n","save_npz('/content/gdrive/My Drive/Colab Notebooks/'+direct+'/X_train_unigram.npz', X_train_unigram)\n","\n","\n","\n","#Unigram - TF IDF\n","\n","unigram_tf_idf_transformer = TfidfTransformer()\n","unigram_tf_idf_transformer.fit(X_train_unigram)\n","\n","dump(unigram_tf_idf_transformer, '/content/gdrive/My Drive/Colab Notebooks/'+direct+'/unigram_tf_idf_transformer.joblib')\n","X_train_unigram_tf_idf = unigram_tf_idf_transformer.transform(X_train_unigram)\n","save_npz('/content/gdrive/My Drive/Colab Notebooks/'+direct+'/X_train_unigram_tf_idf.npz', X_train_unigram_tf_idf)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"pH8cVmngc_2q","colab_type":"code","colab":{}},"source":["#Bigram - Count\n","\n","bigram_vectorizer = CountVectorizer(ngram_range=(1, 2))\n","bigram_vectorizer.fit(x_train)\n","\n","dump(bigram_vectorizer, '/content/gdrive/My Drive/Colab Notebooks/'+direct+'/bigram_vectorizer.joblib')\n","X_train_bigram = bigram_vectorizer.transform(x_train)\n","save_npz('/content/gdrive/My Drive/Colab Notebooks/'+direct+'/X_train_bigram.npz', X_train_bigram)\n","\n","\n","#Bigram - TF IDF\n","bigram_tf_idf_transformer = TfidfTransformer()\n","bigram_tf_idf_transformer.fit(X_train_bigram)\n","\n","dump(bigram_tf_idf_transformer, '/content/gdrive/My Drive/Colab Notebooks/'+direct+'/bigram_tf_idf_transformer.joblib')\n","X_train_bigram_tf_idf = bigram_tf_idf_transformer.transform(X_train_bigram)\n","save_npz('/content/gdrive/My Drive/Colab Notebooks/'+direct+'/X_train_bigram_tf_idf.npz', X_train_bigram_tf_idf)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"w-dOgH9EeE3l","colab_type":"code","colab":{}},"source":["from sklearn.linear_model import SGDClassifier\n","from sklearn.model_selection import train_test_split\n","from scipy.sparse import csr_matrix\n","\n","def tss(X,y,title):\n","  training_x,valid_x,training_y,valid_y=train_test_split(X,y,train_size=0.75,stratify=y)\n","  \n","  clf = SGDClassifier(shuffle=True)\n","  clf.fit(training_x,training_y)\n","\n","  train_score = clf.score(training_x,training_y)\n","  valid_score = clf.score(valid_x,valid_y)\n","\n","  print(title,\"\\nTrain Score :\",round(train_score,2),\"\\nValidation Score :\",round(valid_score,2),\"\\n\")\n","\n","\n","\n","\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZtDlgHbpgfS5","colab_type":"code","colab":{}},"source":["tss(X_train_unigram, y_train, 'Unigram Counts') \n","tss(X_train_unigram_tf_idf, y_train, 'Unigram Tf-Idf')\n","tss(X_train_bigram, y_train, 'Bigram Counts')\n","tss(X_train_bigram_tf_idf, y_train, 'Bigram Tf-Idf')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"8qTG5qYRAfW0","colab_type":"code","colab":{}},"source":["from sklearn.model_selection import RandomizedSearchCV\n","from scipy.stats import uniform\n","\n","#Replace here!\n","training_x = X_train_bigram\n","\n","#Phase 1 \n","\n","clf = SGDClassifier(shuffle=True)\n","distributions = dict(\n","    loss=['hinge', 'log', 'modified_huber', 'squared_hinge', 'perceptron'],\n","    learning_rate=['optimal', 'invscaling', 'adaptive'],\n","    eta0=uniform(loc=1e-7, scale=1e-2)\n",")\n","\n","random_search_cv = RandomizedSearchCV(\n","    estimator=clf,\n","    param_distributions=distributions,\n","    cv=5,\n","    n_iter=100\n",")\n","\n","random_search_cv.fit(training_x, y_train)\n","\n","print(\"Best Params :\", random_search_cv.best_params_)\n","print(\"Best Scored :\", random_search_cv.best_score_)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"e-3WsM3yCSg5","colab_type":"code","colab":{}},"source":["#Phase 2:\n","\n","clf = SGDClassifier(shuffle=True)\n","\n","distributions = dict(\n","    penalty=['l1', 'l2', 'elasticnet'],\n","    alpha=uniform(loc=1e-6, scale=1e-4)\n",")\n","\n","random_search_cv = RandomizedSearchCV(\n","    estimator=clf,\n","    param_distributions=distributions,\n","    cv=5,\n","    n_iter=100\n",")\n","\n","random_search_cv.fit(training_x, y_train)\n","print('Best params :',random_search_cv.best_params_)\n","print('Best score :',random_search_cv.best_score_)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"cNt44jwYCwoG","colab_type":"code","colab":{}},"source":["sgd_classifier = random_search_cv.best_estimator_\n","dump(random_search_cv.best_estimator_, '/content/gdrive/My Drive/Colab Notebooks/'+direct+'/sgd_classifier_with_bgc.joblib')\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"5TUaAJGmC7Q-","colab_type":"code","colab":{}},"source":["#Replace Here!\n","\n","testing_x=bigram_vectorizer.transform(x_test)\n","#testing_x = bigram_tf_idf_transformer.transform(testing_x)\n","\n","score = sgd_classifier.score(testing_x, y_test)\n","print(score)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"pwTCDeePMJSD","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"NHtxl6C5MKBM","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}